cheeseandtrap = [ # 9x9 리스트 / 8,0에서 시작 / 0,8 출구
    [-1, -1, 1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, 1, -1, 2, -1],
    [1, -1, 2, -1, -1, -1, -1, 1, -1],
    [-1, -1, -1, -1, 1, 2, -1, -1, -1],
    [-1, 1, -1, 1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, 2, 1, 2, -1],
    [-1, 1, -1, -1, 1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, 1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1]
]

cheese = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0]
          ]

def findcheese(l, c): # 치즈 개수를 세어주는 함수 / 덫일 때는 -100으로 설정해서 max()함수에서 걸러지도록 설정
    for i in range(7, -1, -1): # 가장 왼쪽 줄
        if l[i][0] == -1: c[i][0] = c[i + 1][0] # 일반 칸
        elif l[i][0] == 1: c[i][0] = c[i + 1][0] + 1 # 치즈 칸
        elif l[i][0] == 2: c[i][0] = -100 # 덫
    for j in range(1, 9): # 가장 아래 줄
        if l[8][j] == -1: c[8][j] = c[8][j - 1] # 일반 칸
        elif l[8][j] == 1: c[8][j] = c[8][j - 1] + 1 # 치즈 칸
        elif l[8][j] == 2: c[8][j] = -100 # 덫
    for i in range(7, -1, -1): # 나머지 칸
        for j in range(1, 9):
            if l[i][j] == -1 : # 일반 칸
                c[i][j] = max(c[i + 1][j], c[i][j - 1])
            elif l[i][j] == 1 : # 치즈 칸
                c[i][j] = max(c[i + 1][j] + 1, c[i][j - 1] + 1)
            elif l[i][j] == 1 : # 덫
                c[i][j] = -100
    return c[0][8] # 출구 치즈 개수 리턴

result = findcheese(cheeseandtrap, cheese)

print('먹을 수 있는 최대 치즈 수는', result, '개 입니다')
for i in range(9):
    print(cheese[i])